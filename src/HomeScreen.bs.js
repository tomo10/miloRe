// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Store from "./Store.bs.js";
import * as Theme from "./Theme.bs.js";
import * as React from "react";
import * as SearchBar from "./SearchBar.bs.js";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as ExerciseRow from "./ExerciseRow.bs.js";
import * as WorkoutTile from "./WorkoutTile.bs.js";
import * as ReactNative from "react-native";
import * as ExerciseInput from "./ExerciseInput.bs.js";
import * as Stacks_component_Stack from "@mobily/stacks/src/Stacks_component_Stack.bs.js";

var styles = ReactNative.StyleSheet.create({
      container: {
        backgroundColor: Theme.color.grey_100,
        marginTop: 62,
        paddingHorizontal: 24
      },
      sectionContainer: {
        alignItems: "center",
        paddingHorizontal: 12
      },
      sectionTitle: {
        fontSize: 24,
        fontWeight: "600"
      },
      sectionDescription: {
        fontSize: 18,
        fontWeight: "400",
        marginTop: 8
      },
      highlight: {
        fontWeight: "700"
      },
      exerciseList: {
        alignItems: "center",
        justifyContent: "center"
      }
    });

function HomeScreen(Props) {
  var match = React.useReducer(Store.reducer, Store.initialState);
  var dispatch = match[1];
  var match$1 = React.useState(function () {
        return "";
      });
  var searchTerm = match$1[0];
  var includesSearch = function (x) {
    return x.title.toLowerCase().includes(searchTerm.toLowerCase());
  };
  var filteredExercises = Store.allExercises.filter(includesSearch);
  return React.createElement(Stacks_component_Stack.make, {
              space: [4],
              padding: [8],
              style: styles.container,
              children: null
            }, React.createElement(ReactNative.View, {
                  style: styles.sectionContainer,
                  children: React.createElement(ReactNative.Text, {
                        children: "Creating workout",
                        style: styles.sectionTitle
                      })
                }), React.createElement(SearchBar.make, {
                  setSearchTerm: match$1[1]
                }), React.createElement(ReactNative.ScrollView, {
                  horizontal: true,
                  children: Belt_Array.mapWithIndex(match[0].exercises, (function (index, exercise) {
                          return React.createElement(WorkoutTile.make, {
                                      index: index,
                                      exercise: exercise,
                                      dispatch: dispatch
                                    });
                        }))
                }), React.createElement(ExerciseInput.make, {
                  dispatch: dispatch
                }), React.createElement(ReactNative.ScrollView, {
                  children: React.createElement(Stacks_component_Stack.make, {
                        space: [6],
                        style: styles.exerciseList,
                        children: Belt_Array.mapWithIndex(searchTerm.length > 0 ? filteredExercises : Store.allExercises, (function (index, x) {
                                return React.createElement(ExerciseRow.make, {
                                            index: index,
                                            exercise: x,
                                            dispatch: dispatch
                                          });
                              }))
                      })
                }));
}

var make = HomeScreen;

export {
  styles ,
  make ,
  
}
/* styles Not a pure module */
